--보드 (+멤버, 카테고리, 좋아요) 뷰 생성
--뷰 생성
CREATE VIEW BD_BOARD_JOIN_MEMCATELIKE 
AS SELECT bb.BOARD_NUM, BOARD_TITLE, BOARD_CONTENT, BOARD_VISIBILITY, BOARD_CATEGORY, CATEGORY_NAME, bm.MEMBER_NUM, MEMBER_NICKNAME, NVL(LIKE_COUNT, 0) AS LIKE_COUNT, BOARD_WRITE_DAY
FROM BD_BOARD bb 
JOIN BD_MEMBER bm ON bb.MEMBER_NUM = bm.MEMBER_NUM
JOIN BD_CATEGORY bc ON bb.BOARD_CATEGORY = bc.CATEGORY_NUM
LEFT OUTER JOIN (SELECT BOARD_NUM, COUNT(*) AS LIKE_COUNT FROM BD_LIKE GROUP BY BOARD_NUM) bl ON bb.BOARD_NUM = bl.BOARD_NUM;
--뷰 삭제
DROP VIEW BD_BOARD_JOIN_MEMCATELIKE;


--240828 11:15 (멤버테이블 제약조건변경)
--ID: BREADFISH
--PW: 1234


SELECT * FROM BD_MEMBER;
SELECT * FROM BD_CATEGORY;
SELECT * FROM BD_BOARD;
SELECT * FROM BD_LIKE;
SELECT * FROM BD_IMAGE;
SELECT * FROM BD_REPLY;

DROP TABLE BD_MEMBER CASCADE CONSTRAINTS;
DROP TABLE BD_CATEGORY CASCADE CONSTRAINTS;
DROP TABLE BD_BOARD CASCADE CONSTRAINTS;
DROP TABLE BD_LIKE CASCADE CONSTRAINTS;
DROP TABLE BD_IMAGE CASCADE CONSTRAINTS;
DROP TABLE BD_REPLY CASCADE CONSTRAINTS;

CREATE TABLE BD_MEMBER (
   MEMBER_NUM         NUMBER                        		--PK
   ,MEMBER_EMAIL      VARCHAR2(100) UNIQUE NOT NULL      	--이메일 (아이디)
   ,MEMBER_PW         VARCHAR2(100) NOT NULL            	--비밀번호
   ,MEMBER_NAME       VARCHAR2(50) NOT NULL            		--이름
   ,MEMBER_PHONE       VARCHAR2(50)                  		--전화번호
   ,MEMBER_NICKNAME   VARCHAR2(100) UNIQUE NOT NULL      	--닉네임
   ,MEMBER_PROFILE_WAY VARCHAR2(500) NOT NULL            	--프로필 이미지 서버 경로
   ,MEMBER_ROLE      VARCHAR2(20) DEFAULT 'user'         	--권한 (일반, 점주, 관리자)
   ,MEMBER_HIREDAY      DATE DEFAULT SYSDATE            	--가입일
   ,CONSTRAINT PK_BD_MEMBER PRIMARY KEY(MEMBER_NUM)
   ,CONSTRAINT CHECK_MEMBER_ROLE CHECK(MEMBER_ROLE IN('user', 'seller', 'admin')) 
);


CREATE TABLE BD_CATEGORY (
	CATEGORY_NUM 	NUMBER									--카테고리 넘버 PK
	,CATEGORY_NAME 	VARCHAR2(30) NOT NULL UNIQUE			--카테고리명
	,CONSTRAINT PK_BD_CATEGORY PRIMARY KEY(CATEGORY_NUM)
);

CREATE TABLE BD_BOARD (
	BOARD_NUM			NUMBER								--게시물 넘버 PK
	,BOARD_TITLE		VARCHAR2(500) NOT NULL				--게시물 제목
	,BOARD_CONTENT		VARCHAR2(1000) NOT NULL				--게시물 내용
	,MEMBER_NUM			NUMBER 								--작성자 FK
	,BOARD_WRITE_DAY	DATE DEFAULT SYSDATE				--게시물 작성일시
	,BOARD_VISIBILITY	VARCHAR2(20) DEFAULT '공개' 			--공개 비공개 여부 (공개, 비공개)
	,BOARD_CATEGORY		NUMBER NOT NULL						--카테고리 FK
	,CONSTRAINT PK_BD_BOARD PRIMARY KEY(BOARD_NUM)
	,CONSTRAINT FK_BD_BOARD_MEMBER_NUM FOREIGN KEY(MEMBER_NUM) REFERENCES BD_MEMBER(MEMBER_NUM) ON DELETE SET NULL
	,CONSTRAINT FK_BD_BOARD_CATEGORY FOREIGN KEY(BOARD_CATEGORY) REFERENCES BD_CATEGORY(CATEGORY_NUM) ON DELETE CASCADE
	,CONSTRAINT CHECK_BOARD_VISIBILITY CHECK(BOARD_VISIBILITY IN('공개', '비공개'))
);

CREATE TABLE BD_LIKE (
	LIKE_NUM	NUMBER						--좋아요 PK
	,BOARD_NUM	NUMBER NOT NULL				--게시물 번호 FK
	,MEMBER_NUM	NUMBER						--좋아요 누른 사람 FK
	,CONSTRAINT PK_BD_LIKE PRIMARY KEY(LIKE_NUM)
	,CONSTRAINT FK_BD_LIKE_BOARD_NUM FOREIGN KEY(BOARD_NUM) REFERENCES BD_BOARD(BOARD_NUM) ON DELETE CASCADE 
	,CONSTRAINT FK_BD_LIKE_MEMBER_NUM FOREIGN KEY(MEMBER_NUM) REFERENCES BD_MEMBER(MEMBER_NUM) ON DELETE SET NULL
);

CREATE TABLE BD_IMAGE (
	IMAGE_NUM NUMBER						--이미지 넘버 PK
	,IMAGE_WAY VARCHAR2(500) NOT NULL		--이미지 서버 경로
	,BOARD_NUM NUMBER NOT NULL				--게시물 번호 FK
	,CONSTRAINT PK_BD_IMAGE PRIMARY KEY(IMAGE_NUM)
	,CONSTRAINT FK_BD_IMAGE_BOARD_NUM FOREIGN KEY(BOARD_NUM) REFERENCES BD_BOARD(BOARD_NUM) ON DELETE CASCADE 
);

CREATE TABLE BD_REPLY (
	REPLY_NUM		NUMBER					--댓글 번호 PK
	,REPLY_CONTENT	VARCHAR2(500) NOT NULL	--댓글 내용
	,MEMBER_NUM		NUMBER					--댓글 작성자 FK
	,REPLY_WRITE_DAY DATE DEFAULT SYSDATE 	--댓글 작성일시
	,BOARD_NUM		NUMBER NOT NULL			--댓글 달린 게시물 FK
	,CONSTRAINT PK_BD_REPLY PRIMARY KEY(REPLY_NUM)
	,CONSTRAINT FK_BD_REPLY_MEMBER_NUM FOREIGN KEY(MEMBER_NUM) REFERENCES BD_MEMBER(MEMBER_NUM) ON DELETE SET NULL
	,CONSTRAINT FK_BD_REPLY_BOARD_NUM FOREIGN KEY(BOARD_NUM) REFERENCES BD_BOARD(BOARD_NUM) ON DELETE CASCADE 
);

--SAMPLE DATA
INSERT INTO BD_MEMBER VALUES((SELECT NVL(MAX(MEMBER_NUM),0)+1 FROM BD_MEMBER),'admin@gmail.com','1234','관리자','010-1111-1111','관리자','default.jpg','admin',TO_DATE('2024-08-02','YYYY-MM-DD'));
INSERT INTO BD_MEMBER VALUES((SELECT NVL(MAX(MEMBER_NUM),0)+1 FROM BD_MEMBER),'test@gmail.com','1234','테스트','010-1111-2222','닉네임테스트','default.jpg','user',TO_DATE('2024-08-01','YYYY-MM-DD'));
INSERT INTO BD_MEMBER VALUES((SELECT NVL(MAX(MEMBER_NUM),0)+1 FROM BD_MEMBER),'bread@gmail.com','1234','테스트','010-1111-3333','빵','default.jpg','user',TO_DATE('2024-08-03','YYYY-MM-DD'));
INSERT INTO BD_MEMBER VALUES((SELECT NVL(MAX(MEMBER_NUM),0)+1 FROM BD_MEMBER),'fish@gmail.com','1234','테스트','010-1111-4444','물고기','default.jpg','user',TO_DATE('2024-08-15','YYYY-MM-DD'));
INSERT INTO BD_MEMBER VALUES((SELECT NVL(MAX(MEMBER_NUM),0)+1 FROM BD_MEMBER),'nyamnyam@gmail.com','1234','테스트','010-1111-5555','냠냠','default.jpg','user',SYSDATE);
--카테고리
INSERT INTO BD_CATEGORY VALUES((SELECT NVL(MAX(CATEGORY_NUM)+1,1) FROM BD_CATEGORY), '문의');
INSERT INTO BD_CATEGORY VALUES((SELECT NVL(MAX(CATEGORY_NUM)+1,1) FROM BD_CATEGORY), '일반');
--게시글
INSERT INTO BD_BOARD VALUES((SELECT NVL(MAX(BOARD_NUM)+1,1) FROM BD_BOARD),'공개된 게시글','내용',1,TO_DATE('2024-08-03','YYYY-MM-DD'),'공개',1);
INSERT INTO BD_BOARD VALUES((SELECT NVL(MAX(BOARD_NUM)+1,1) FROM BD_BOARD),'공개된 게시글','내용',2,TO_DATE('2024-08-13','YYYY-MM-DD'),'공개',1);
INSERT INTO BD_BOARD VALUES((SELECT NVL(MAX(BOARD_NUM)+1,1) FROM BD_BOARD),'공개된 게시글','내용',1,TO_DATE('2024-08-20','YYYY-MM-DD'),'공개',2);
INSERT INTO BD_BOARD VALUES((SELECT NVL(MAX(BOARD_NUM)+1,1) FROM BD_BOARD),'비공개된 게시글','내용',2,SYSDATE,'비공개',2);
--좋아요
INSERT INTO BD_LIKE VALUES ((SELECT NVL(MAX(LIKE_NUM)+1,1) FROM BD_LIKE), 1, 1);
INSERT INTO BD_LIKE VALUES ((SELECT NVL(MAX(LIKE_NUM)+1,1) FROM BD_LIKE), 1, 2);
INSERT INTO BD_LIKE VALUES ((SELECT NVL(MAX(LIKE_NUM)+1,1) FROM BD_LIKE), 1, 3);
INSERT INTO BD_LIKE VALUES ((SELECT NVL(MAX(LIKE_NUM)+1,1) FROM BD_LIKE), 2, 1);
INSERT INTO BD_LIKE VALUES ((SELECT NVL(MAX(LIKE_NUM)+1,1) FROM BD_LIKE), 2, 2);
--이미지
--댓글
INSERT INTO BD_REPLY VALUES ((SELECT NVL(MAX(REPLY_NUM)+1,1) FROM BD_REPLY),'댓글내용',2,TO_DATE('2024-08-03','YYYY-MM-DD'),1);
INSERT INTO BD_REPLY VALUES ((SELECT NVL(MAX(REPLY_NUM)+1,1) FROM BD_REPLY),'댓글내용',3,TO_DATE('2024-08-10','YYYY-MM-DD'),1);
INSERT INTO BD_REPLY VALUES ((SELECT NVL(MAX(REPLY_NUM)+1,1) FROM BD_REPLY),'댓글내용',4,TO_DATE('2024-08-20','YYYY-MM-DD'),2);
INSERT INTO BD_REPLY VALUES ((SELECT NVL(MAX(REPLY_NUM)+1,1) FROM BD_REPLY),'댓글내용',2,SYSDATE,2);
END;